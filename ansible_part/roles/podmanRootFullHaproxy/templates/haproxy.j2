# This file will be generated by the python script #

#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/1.8/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         {{ frontal_ip }} local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # system-wide crypto-policies
    ssl-default-bind-options no-sslv3

    #because of self-signed certs
    ssl-server-verify none


    ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK


#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
#    mode                    http
    log                     global
#    option                  httplog
    option                  dontlognull
#    option http-server-close
#    option forwardfor       except 127.0.0.0/8
#    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000


     
#---------------------------------------------------------------------
# frontend Dovecot
#---------------------------------------------------------------------

frontend ft_imap
    bind *:993 ssl crt /etc/certs/haproxy.pem 
    mode tcp
    default_backend bk_imap


#---------------------------------------------------------------------
# Backends Dovecot
#---------------------------------------------------------------------

backend bk_imap
    mode tcp
   # balance leastconn
   # stick store-request src
   # stick-table type ip size 200k expire 30m
    server podmail {{ frontal_ip }}:10093 send-proxy-v2


#-----------------
# Front Web http
#----------------

frontend ft_web
    bind *:80
    mode http
    default_backend bk_web

acl elk_http hdr(host) -i {{ ELK_fqdn }}
acl git_http hdr(host) -i {{ gitlab_fqdn }}
acl nextcloud_http hdr(host) -i {{ nextcloud_fqdn }}
acl prestashop_http hdr(host) -i {{ prestashop_fqdn }}
acl wordpress_http hdr(host) -i {{ wordpress_fqdn }}

use_backend bk_elk if elk_http
use_backend bk_gitlab if git_http
use_backend bk_nextcloud if nextcloud_http
use_backend bk_prestashop if prestashop_http
use_backend bk_wordpress if wordpress_http


#-----------------
# Front Web https
#----------------

frontend ft_webs
    bind *:443 ssl crt /etc/certs/haproxy.pem #crt /certs/cert2.pem crt /certs/cert3.pem #a faire total#
    mode http
    use_backend bk_elk if { ssl_fc_sni {{ ELK_fqdn }} }
    use_backend bk_gitlab if { ssl_fc_sni {{ gitlab_fqdn }} }
    use_backend bk_nextcloud if { ssl_fc_sni {{ nextcloud_fqdn }} }
    use_backend bk_prestashop if { ssl_fc_sni {{ prestashop_fqdn }} }
    use_backend bk_wordpress if { ssl_fc_sni {{ wordpress_fqdn }} }
    default_backend bk_web


#---------------
# Backends Default Web
#----------------

backend bk_web
    mode http
    server wordp1 {{ frontal_ip }}:{{ wordpress_port_http }}


#---------------
# Backends ELK
#----------------

backend bk_elk
    mode http
    server elk1 {{ frontal_ip }}:{{ ELK_port_9200 }}


#---------------
# Backends Gitlab
#----------------

backend bk_gitlab
    mode http
    server gitl1 {{ frontal_ip }}:{{ gitlab_port_https }} 


#---------------
# Backends Nextcloud
#----------------

backend bk_nextcloud
    mode http
    server nxt1 {{ frontal_ip }}:{{ nextcloud_port_http }}


#---------------
# Backends Prestashop
#----------------

backend bk_prestashop
    mode http
    server prest1 {{ frontal_ip }}:{{ prestashop_port_http }}


#---------------
# Backends Wordpress
#----------------

backend bk_wordpress
    mode http
    server wordp1 {{ frontal_ip }}:{{ wordpress_port_http }}
